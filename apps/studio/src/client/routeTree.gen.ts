/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ToolbarRouteImport } from './routes/toolbar'
import { Route as SidebarRouteImport } from './routes/sidebar'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as EvalsRouteImport } from './routes/evals'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as SettingsProvidersRouteImport } from './routes/settings/providers'
import { Route as SettingsFeaturesRouteImport } from './routes/settings/features'
import { Route as SettingsAdvancedRouteImport } from './routes/settings/advanced'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AppWelcomeRouteImport } from './routes/_app/welcome'
import { Route as AppSetupRouteImport } from './routes/_app/setup'
import { Route as AppReleaseNotesRouteImport } from './routes/_app/release-notes'
import { Route as AppNewTabRouteImport } from './routes/_app/new-tab'
import { Route as AppDebugRouteRouteImport } from './routes/_app/debug/route'
import { Route as AppDiscoverIndexRouteImport } from './routes/_app/discover/index'
import { Route as AppDebugIndexRouteImport } from './routes/_app/debug/index'
import { Route as AppDebugComponentsRouteImport } from './routes/_app/debug/components'
import { Route as AppDebugColorsRouteImport } from './routes/_app/debug/colors'
import { Route as AppDebugBulkDeleteRouteImport } from './routes/_app/debug/bulk-delete'
import { Route as AppProjectsSubdomainIndexRouteImport } from './routes/_app/projects/$subdomain/index'
import { Route as AppProjectsSubdomainViewRouteImport } from './routes/_app/projects/$subdomain/view'
import { Route as AppDiscoverAppsFolderNameRouteImport } from './routes/_app/discover/apps/$folderName'

const ToolbarRoute = ToolbarRouteImport.update({
  id: '/toolbar',
  path: '/toolbar',
  getParentRoute: () => rootRouteImport,
} as any)
const SidebarRoute = SidebarRouteImport.update({
  id: '/sidebar',
  path: '/sidebar',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const EvalsRoute = EvalsRouteImport.update({
  id: '/evals',
  path: '/evals',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRoute,
} as any)
const SettingsProvidersRoute = SettingsProvidersRouteImport.update({
  id: '/providers',
  path: '/providers',
  getParentRoute: () => SettingsRoute,
} as any)
const SettingsFeaturesRoute = SettingsFeaturesRouteImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => SettingsRoute,
} as any)
const SettingsAdvancedRoute = SettingsAdvancedRouteImport.update({
  id: '/advanced',
  path: '/advanced',
  getParentRoute: () => SettingsRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppWelcomeRoute = AppWelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSetupRoute = AppSetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReleaseNotesRoute = AppReleaseNotesRouteImport.update({
  id: '/release-notes',
  path: '/release-notes',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNewTabRoute = AppNewTabRouteImport.update({
  id: '/new-tab',
  path: '/new-tab',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDebugRouteRoute = AppDebugRouteRouteImport.update({
  id: '/debug',
  path: '/debug',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDiscoverIndexRoute = AppDiscoverIndexRouteImport.update({
  id: '/discover/',
  path: '/discover/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDebugIndexRoute = AppDebugIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDebugRouteRoute,
} as any)
const AppDebugComponentsRoute = AppDebugComponentsRouteImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => AppDebugRouteRoute,
} as any)
const AppDebugColorsRoute = AppDebugColorsRouteImport.update({
  id: '/colors',
  path: '/colors',
  getParentRoute: () => AppDebugRouteRoute,
} as any)
const AppDebugBulkDeleteRoute = AppDebugBulkDeleteRouteImport.update({
  id: '/bulk-delete',
  path: '/bulk-delete',
  getParentRoute: () => AppDebugRouteRoute,
} as any)
const AppProjectsSubdomainIndexRoute =
  AppProjectsSubdomainIndexRouteImport.update({
    id: '/projects/$subdomain/',
    path: '/projects/$subdomain/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppProjectsSubdomainViewRoute =
  AppProjectsSubdomainViewRouteImport.update({
    id: '/projects/$subdomain/view',
    path: '/projects/$subdomain/view',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppDiscoverAppsFolderNameRoute =
  AppDiscoverAppsFolderNameRouteImport.update({
    id: '/discover/apps/$folderName',
    path: '/discover/apps/$folderName',
    getParentRoute: () => AppRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/evals': typeof EvalsRoute
  '/settings': typeof SettingsRouteWithChildren
  '/sidebar': typeof SidebarRoute
  '/toolbar': typeof ToolbarRoute
  '/debug': typeof AppDebugRouteRouteWithChildren
  '/new-tab': typeof AppNewTabRoute
  '/release-notes': typeof AppReleaseNotesRoute
  '/setup': typeof AppSetupRoute
  '/welcome': typeof AppWelcomeRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/features': typeof SettingsFeaturesRoute
  '/settings/providers': typeof SettingsProvidersRoute
  '/settings/': typeof SettingsIndexRoute
  '/debug/bulk-delete': typeof AppDebugBulkDeleteRoute
  '/debug/colors': typeof AppDebugColorsRoute
  '/debug/components': typeof AppDebugComponentsRoute
  '/debug/': typeof AppDebugIndexRoute
  '/discover': typeof AppDiscoverIndexRoute
  '/discover/apps/$folderName': typeof AppDiscoverAppsFolderNameRoute
  '/projects/$subdomain/view': typeof AppProjectsSubdomainViewRoute
  '/projects/$subdomain': typeof AppProjectsSubdomainIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/evals': typeof EvalsRoute
  '/sidebar': typeof SidebarRoute
  '/toolbar': typeof ToolbarRoute
  '/new-tab': typeof AppNewTabRoute
  '/release-notes': typeof AppReleaseNotesRoute
  '/setup': typeof AppSetupRoute
  '/welcome': typeof AppWelcomeRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/features': typeof SettingsFeaturesRoute
  '/settings/providers': typeof SettingsProvidersRoute
  '/settings': typeof SettingsIndexRoute
  '/debug/bulk-delete': typeof AppDebugBulkDeleteRoute
  '/debug/colors': typeof AppDebugColorsRoute
  '/debug/components': typeof AppDebugComponentsRoute
  '/debug': typeof AppDebugIndexRoute
  '/discover': typeof AppDiscoverIndexRoute
  '/discover/apps/$folderName': typeof AppDiscoverAppsFolderNameRoute
  '/projects/$subdomain/view': typeof AppProjectsSubdomainViewRoute
  '/projects/$subdomain': typeof AppProjectsSubdomainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/evals': typeof EvalsRoute
  '/settings': typeof SettingsRouteWithChildren
  '/sidebar': typeof SidebarRoute
  '/toolbar': typeof ToolbarRoute
  '/_app/debug': typeof AppDebugRouteRouteWithChildren
  '/_app/new-tab': typeof AppNewTabRoute
  '/_app/release-notes': typeof AppReleaseNotesRoute
  '/_app/setup': typeof AppSetupRoute
  '/_app/welcome': typeof AppWelcomeRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/features': typeof SettingsFeaturesRoute
  '/settings/providers': typeof SettingsProvidersRoute
  '/settings/': typeof SettingsIndexRoute
  '/_app/debug/bulk-delete': typeof AppDebugBulkDeleteRoute
  '/_app/debug/colors': typeof AppDebugColorsRoute
  '/_app/debug/components': typeof AppDebugComponentsRoute
  '/_app/debug/': typeof AppDebugIndexRoute
  '/_app/discover/': typeof AppDiscoverIndexRoute
  '/_app/discover/apps/$folderName': typeof AppDiscoverAppsFolderNameRoute
  '/_app/projects/$subdomain/view': typeof AppProjectsSubdomainViewRoute
  '/_app/projects/$subdomain/': typeof AppProjectsSubdomainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/evals'
    | '/settings'
    | '/sidebar'
    | '/toolbar'
    | '/debug'
    | '/new-tab'
    | '/release-notes'
    | '/setup'
    | '/welcome'
    | '/login'
    | '/register'
    | '/settings/advanced'
    | '/settings/features'
    | '/settings/providers'
    | '/settings/'
    | '/debug/bulk-delete'
    | '/debug/colors'
    | '/debug/components'
    | '/debug/'
    | '/discover'
    | '/discover/apps/$folderName'
    | '/projects/$subdomain/view'
    | '/projects/$subdomain'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/evals'
    | '/sidebar'
    | '/toolbar'
    | '/new-tab'
    | '/release-notes'
    | '/setup'
    | '/welcome'
    | '/login'
    | '/register'
    | '/settings/advanced'
    | '/settings/features'
    | '/settings/providers'
    | '/settings'
    | '/debug/bulk-delete'
    | '/debug/colors'
    | '/debug/components'
    | '/debug'
    | '/discover'
    | '/discover/apps/$folderName'
    | '/projects/$subdomain/view'
    | '/projects/$subdomain'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/evals'
    | '/settings'
    | '/sidebar'
    | '/toolbar'
    | '/_app/debug'
    | '/_app/new-tab'
    | '/_app/release-notes'
    | '/_app/setup'
    | '/_app/welcome'
    | '/_auth/login'
    | '/_auth/register'
    | '/settings/advanced'
    | '/settings/features'
    | '/settings/providers'
    | '/settings/'
    | '/_app/debug/bulk-delete'
    | '/_app/debug/colors'
    | '/_app/debug/components'
    | '/_app/debug/'
    | '/_app/discover/'
    | '/_app/discover/apps/$folderName'
    | '/_app/projects/$subdomain/view'
    | '/_app/projects/$subdomain/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  EvalsRoute: typeof EvalsRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  SidebarRoute: typeof SidebarRoute
  ToolbarRoute: typeof ToolbarRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/toolbar': {
      id: '/toolbar'
      path: '/toolbar'
      fullPath: '/toolbar'
      preLoaderRoute: typeof ToolbarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sidebar': {
      id: '/sidebar'
      path: '/sidebar'
      fullPath: '/sidebar'
      preLoaderRoute: typeof SidebarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/evals': {
      id: '/evals'
      path: '/evals'
      fullPath: '/evals'
      preLoaderRoute: typeof EvalsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/settings/providers': {
      id: '/settings/providers'
      path: '/providers'
      fullPath: '/settings/providers'
      preLoaderRoute: typeof SettingsProvidersRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/settings/features': {
      id: '/settings/features'
      path: '/features'
      fullPath: '/settings/features'
      preLoaderRoute: typeof SettingsFeaturesRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/settings/advanced': {
      id: '/settings/advanced'
      path: '/advanced'
      fullPath: '/settings/advanced'
      preLoaderRoute: typeof SettingsAdvancedRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_app/welcome': {
      id: '/_app/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof AppWelcomeRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/setup': {
      id: '/_app/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof AppSetupRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/release-notes': {
      id: '/_app/release-notes'
      path: '/release-notes'
      fullPath: '/release-notes'
      preLoaderRoute: typeof AppReleaseNotesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/new-tab': {
      id: '/_app/new-tab'
      path: '/new-tab'
      fullPath: '/new-tab'
      preLoaderRoute: typeof AppNewTabRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/debug': {
      id: '/_app/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof AppDebugRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/discover/': {
      id: '/_app/discover/'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof AppDiscoverIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/debug/': {
      id: '/_app/debug/'
      path: '/'
      fullPath: '/debug/'
      preLoaderRoute: typeof AppDebugIndexRouteImport
      parentRoute: typeof AppDebugRouteRoute
    }
    '/_app/debug/components': {
      id: '/_app/debug/components'
      path: '/components'
      fullPath: '/debug/components'
      preLoaderRoute: typeof AppDebugComponentsRouteImport
      parentRoute: typeof AppDebugRouteRoute
    }
    '/_app/debug/colors': {
      id: '/_app/debug/colors'
      path: '/colors'
      fullPath: '/debug/colors'
      preLoaderRoute: typeof AppDebugColorsRouteImport
      parentRoute: typeof AppDebugRouteRoute
    }
    '/_app/debug/bulk-delete': {
      id: '/_app/debug/bulk-delete'
      path: '/bulk-delete'
      fullPath: '/debug/bulk-delete'
      preLoaderRoute: typeof AppDebugBulkDeleteRouteImport
      parentRoute: typeof AppDebugRouteRoute
    }
    '/_app/projects/$subdomain/': {
      id: '/_app/projects/$subdomain/'
      path: '/projects/$subdomain'
      fullPath: '/projects/$subdomain'
      preLoaderRoute: typeof AppProjectsSubdomainIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/projects/$subdomain/view': {
      id: '/_app/projects/$subdomain/view'
      path: '/projects/$subdomain/view'
      fullPath: '/projects/$subdomain/view'
      preLoaderRoute: typeof AppProjectsSubdomainViewRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/discover/apps/$folderName': {
      id: '/_app/discover/apps/$folderName'
      path: '/discover/apps/$folderName'
      fullPath: '/discover/apps/$folderName'
      preLoaderRoute: typeof AppDiscoverAppsFolderNameRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppDebugRouteRouteChildren {
  AppDebugBulkDeleteRoute: typeof AppDebugBulkDeleteRoute
  AppDebugColorsRoute: typeof AppDebugColorsRoute
  AppDebugComponentsRoute: typeof AppDebugComponentsRoute
  AppDebugIndexRoute: typeof AppDebugIndexRoute
}

const AppDebugRouteRouteChildren: AppDebugRouteRouteChildren = {
  AppDebugBulkDeleteRoute: AppDebugBulkDeleteRoute,
  AppDebugColorsRoute: AppDebugColorsRoute,
  AppDebugComponentsRoute: AppDebugComponentsRoute,
  AppDebugIndexRoute: AppDebugIndexRoute,
}

const AppDebugRouteRouteWithChildren = AppDebugRouteRoute._addFileChildren(
  AppDebugRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppDebugRouteRoute: typeof AppDebugRouteRouteWithChildren
  AppNewTabRoute: typeof AppNewTabRoute
  AppReleaseNotesRoute: typeof AppReleaseNotesRoute
  AppSetupRoute: typeof AppSetupRoute
  AppWelcomeRoute: typeof AppWelcomeRoute
  AppDiscoverIndexRoute: typeof AppDiscoverIndexRoute
  AppDiscoverAppsFolderNameRoute: typeof AppDiscoverAppsFolderNameRoute
  AppProjectsSubdomainViewRoute: typeof AppProjectsSubdomainViewRoute
  AppProjectsSubdomainIndexRoute: typeof AppProjectsSubdomainIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppDebugRouteRoute: AppDebugRouteRouteWithChildren,
  AppNewTabRoute: AppNewTabRoute,
  AppReleaseNotesRoute: AppReleaseNotesRoute,
  AppSetupRoute: AppSetupRoute,
  AppWelcomeRoute: AppWelcomeRoute,
  AppDiscoverIndexRoute: AppDiscoverIndexRoute,
  AppDiscoverAppsFolderNameRoute: AppDiscoverAppsFolderNameRoute,
  AppProjectsSubdomainViewRoute: AppProjectsSubdomainViewRoute,
  AppProjectsSubdomainIndexRoute: AppProjectsSubdomainIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface SettingsRouteChildren {
  SettingsAdvancedRoute: typeof SettingsAdvancedRoute
  SettingsFeaturesRoute: typeof SettingsFeaturesRoute
  SettingsProvidersRoute: typeof SettingsProvidersRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsAdvancedRoute: SettingsAdvancedRoute,
  SettingsFeaturesRoute: SettingsFeaturesRoute,
  SettingsProvidersRoute: SettingsProvidersRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  EvalsRoute: EvalsRoute,
  SettingsRoute: SettingsRouteWithChildren,
  SidebarRoute: SidebarRoute,
  ToolbarRoute: ToolbarRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
